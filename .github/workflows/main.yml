name: Build & Deploy CI

on:
  push:
    branches: [main]
    paths:
      - '**.js'
      - '**.ts'
      - '**.tsx'
      - '**.css'
      - '**.yml'

env:
  REGISTRY_IMAGE: flexile-react
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x, 16.x]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Test
        run: yarn run test
        env:
          CI: true

      - name: Generate build
        run: yarn run build

      - name: Zip build
        uses: thedoctor0/zip-release@master
        with:
          filename: react-flexile-build.zip
          path: build

      - name: Upload build zip artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: react-flexile-build.zip
          path: react-flexile-build.zip

  build-docker:
    name: Build the Docker image
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}